Skip to content
[Jenkins]Jenkins
1
admin
ë¡œê·¸ì•„ì›ƒ

    Dashboard
    cicd3
    #4

Status
Changes
Console Output
Edit Build Information
Timings
Git Build Data
Pipeline Overview
Pipeline Console
Thread Dump
Pause/resume
Replay
Pipeline Steps
Workspaces
Previous Build
In progressIn progressIn progressFailed
ì½˜ì†” ì¶œë ¥
Download
View as plain text

Started by user admin
Obtained Jenkinsfile from git https://github.com/solseek02/k8s-cicd.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/cicd3
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: git
using credential github-credentials
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/cicd3/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/solseek02/k8s-cicd.git # timeout=10
Fetching upstream changes from https://github.com/solseek02/k8s-cicd.git
 > git --version # timeout=10
 > git --version # 'git version 2.47.1'
using GIT_ASKPASS to set credentials github-credentials
 > git fetch --tags --force --progress -- https://github.com/solseek02/k8s-cicd.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision edf68192aa037b92be43b56238675dfeded676fc (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f edf68192aa037b92be43b56238675dfeded676fc # timeout=10
Commit message: "6"
 > git rev-list --no-walk edf68192aa037b92be43b56238675dfeded676fc # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $DOCKERHUB_CREDENTIALS or $DOCKERHUB_CREDENTIALS_PSW
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout)
[Pipeline] checkout
The recommended git tool is: git
using credential github-credentials
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/cicd3/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/solseek02/k8s-cicd.git # timeout=10
Fetching upstream changes from https://github.com/solseek02/k8s-cicd.git
 > git --version # timeout=10
 > git --version # 'git version 2.47.1'
using GIT_ASKPASS to set credentials github-credentials
 > git fetch --tags --force --progress -- https://github.com/solseek02/k8s-cicd.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision edf68192aa037b92be43b56238675dfeded676fc (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f edf68192aa037b92be43b56238675dfeded676fc # timeout=10
Commit message: "6"
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Django Image)
[Pipeline] dir
Running in /var/lib/jenkins/workspace/cicd3/myproject
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ docker build -t solseek02/mydjango:latest .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 941B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.9-slim
#2 DONE 1.3s

#3 [internal] load .dockerignore
#3 transferring context: 355B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/python:3.9-slim@sha256:e52ca5f579cc58fed41efcbb55a0ed5dccf6c7a156cba76acfb4ab42fc19dd00
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 4.81kB done
#5 DONE 0.0s

#6 [7/8] COPY . .
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [3/8] RUN apt-get update && apt-get install -y     build-essential     default-libmysqlclient-dev     pkg-config     && rm -rf /var/lib/apt/lists/*
#8 CACHED

#9 [5/8] RUN python -m venv /opt/venv
#9 CACHED

#10 [6/8] RUN pip install --no-cache-dir -r requirements.txt
#10 CACHED

#11 [4/8] COPY requirements.txt .
#11 CACHED

#12 [8/8] RUN python manage.py collectstatic --noinput
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:a213e01f5ee7280151fad15d26ae4dcc27d0e755ca9446fe2c9144e59fc14fdf done
#13 naming to docker.io/solseek02/mydjango:latest done
#13 DONE 0.0s
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Solseek Image)
[Pipeline] dir
Running in /var/lib/jenkins/workspace/cicd3/mysolseek
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ docker build -t solseek02/mysolseek:latest .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from dockerfile
#1 transferring dockerfile: 682B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/ollama/ollama:latest
#2 DONE 1.3s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/3] FROM docker.io/ollama/ollama:latest@sha256:74a0929e1e082a09e4fdeef8594b8f4537f661366a04080e600c90ea9f712721
#4 DONE 0.0s

#5 [2/3] RUN ollama serve &     sleep 5 &&     ollama pull deepseek-r1:8b &&     kill $(pidof ollama) &&     sleep 2
#5 CACHED

#6 [3/3] RUN echo '#!/bin/sh\n  if [ ! -d "/root/.ollama/models" ]; then\n    echo "ðŸ”¨ Initializing volume with pre-downloaded model..."\n    mkdir -p /root/.ollama\n    cp -r /opt/models/* /root/.ollama/\n  fi\n  exec ollama serve' > /entrypoint.sh &&     chmod +x /entrypoint.sh
#6 CACHED

#7 exporting to image
#7 exporting layers done
#7 writing image sha256:a3acdcafb5797e078ab74658eaf8fe2d1843e6db09697e0e39c9bbb4253fb8dc done
#7 naming to docker.io/solseek02/mysolseek:latest done
#7 DONE 0.0s
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Login to DockerHub)
[Pipeline] sh
+ echo ****
+ docker login -u solseek02 --password-stdin

WARNING! Your credentials are stored unencrypted in '/var/lib/jenkins/.docker/config.json'.
Configure a credential helper to remove this warning. See
https://docs.docker.com/go/credential-store/

Login Succeeded
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push Images)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ docker push solseek02/mydjango:latest
The push refers to repository [docker.io/solseek02/mydjango]
7e77bc47eae1: Preparing
8040368a1ca8: Preparing
1f5592cffcdc: Preparing
60b0a65875d9: Preparing
39094c7abc42: Preparing
c9cd66cc55b6: Preparing
b802eff635e8: Preparing
0796a33961ef: Preparing
04f6e4cfc28e: Preparing
140ec0aa8af0: Preparing
1287fbecdfcc: Preparing
0796a33961ef: Waiting
04f6e4cfc28e: Waiting
140ec0aa8af0: Waiting
c9cd66cc55b6: Waiting
1287fbecdfcc: Waiting
b802eff635e8: Waiting
1f5592cffcdc: Layer already exists
39094c7abc42: Layer already exists
7e77bc47eae1: Layer already exists
60b0a65875d9: Layer already exists
8040368a1ca8: Layer already exists
b802eff635e8: Layer already exists
140ec0aa8af0: Layer already exists
0796a33961ef: Layer already exists
c9cd66cc55b6: Layer already exists
04f6e4cfc28e: Layer already exists
1287fbecdfcc: Layer already exists
latest: digest: sha256:cb522300307f05a6f68faac64695e8261d9b74b08ea4dda213d121bf172faed1 size: 2629
[Pipeline] sh
+ docker push solseek02/mysolseek:latest
The push refers to repository [docker.io/solseek02/mysolseek]
7b6f616aa962: Preparing
50cb9f7ecb5e: Preparing
4f1e5717e84e: Preparing
d3199b7e3644: Preparing
ae8280b0d22b: Preparing
fffe76c64ef2: Preparing
fffe76c64ef2: Waiting
d3199b7e3644: Layer already exists
4f1e5717e84e: Layer already exists
ae8280b0d22b: Layer already exists
50cb9f7ecb5e: Layer already exists
7b6f616aa962: Layer already exists
fffe76c64ef2: Layer already exists
latest: digest: sha256:1bc4004cf12f34c3b5b122627ddf981d9c82dbe2dac132b9db34632a0b746c87 size: 1587
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy to K8s)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ kubectl apply -f mynginx/nginx-k8s.yaml
error: the path "mynginx/nginx-k8s.yaml" does not exist
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] sh
+ docker logout
Removing login credentials for https://index.docker.io/v1/
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE

REST API
